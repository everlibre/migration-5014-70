#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Thu Mar 13 11:53:43 2014

import wx
import migration

# begin wxGlade: extracode
# end wxGlade

class Options:
    createdb = True
    dbc = 'terp_v70'
    dbhostc = '127.0.0.1'
    dbhosts = '127.0.0.1'
    dbportc = '5432'
    dbports = '5432'
    dbs = 'terp'
    hostc = '127.0.0.1'
    hosts = '127.0.0.1'
    module = 'all'
    passdbc = 'admin'
    passdbs = 'admin'
    passwdadmin = 'admin'
    passwdc = 'admin'
    passwds = 'admin'
    portc = '8090'
    ports = '8069'
    protocolec = 'http'
    protocoles = 'http'
    userc = 'admin'
    userdbc = 'admin'
    userdbs = 'admin'
    users = 'admin'

    def __init__(self, *opts, **attrs):
        return None

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self,None,  pos=(150,150), size=(1700,400) )

        self.label_db_source = wx.StaticText(self, -1, "Base source V5014",  (300, 30),  style=wx.ALIGN_CENTER)
        self.db_source = wx.TextCtrl(self, -1, "terp", size=(150, 30))
        self.label_db_cible = wx.StaticText(self, -1, "Base Cible V70", size=(300, 30))
        self.db_cible = wx.TextCtrl(self, -1, "terp_v70" , size=(150, 30))

        self.label_dbhost_source = wx.StaticText(self, -1, "Serveur DB Base v5014", size=(300, 30))
        self.dbhost_source = wx.TextCtrl(self, -1, "127.0.0.1", size=(150, 30))
        self.label_dbhost_cible = wx.StaticText(self, -1, "Serveur DB Base v7", size=(300, 30))
        self.dbhost_cible = wx.TextCtrl(self, -1, "127.0.0.1", size=(150, 30))

        self.label_dbport_source = wx.StaticText(self, -1, "Port DB Base v5014", size=(300, 30))
        self.dbport_source = wx.TextCtrl(self, -1, "5432", size=(150, 30))
        self.label_dbport_cible = wx.StaticText(self, -1, "port DB Base v7", size=(300, 30))
        self.dbport_cible = wx.TextCtrl(self, -1, "5432", size=(150, 30))
    
        self.label_dbuser_source = wx.StaticText(self, -1, "User Postgres Base v5014", size=(300, 30))
        self.dbuser_source = wx.TextCtrl(self, -1, "admin", size=(150, 30))
        self.label_dbuser_cible = wx.StaticText(self, -1, "User Postgres Base v7", size=(300, 30))
        self.dbuser_cible = wx.TextCtrl(self, -1, "admin", size=(150, 30))

        self.label_dbpassword_source = wx.StaticText(self, -1, "Password Postgres Base v5014", size=(300, 30))
        self.dbpassword_source = wx.TextCtrl(self, -1, "admin", size=(150, 30))
        self.label_dbpassword_cible = wx.StaticText(self, -1, "Password Postgres Base v7", size=(300, 30))
        self.dbpassword_cible = wx.TextCtrl(self, -1, "admin", size=(150, 30))
    
        self.label_openerphost_source = wx.StaticText(self, -1, "Serveur DB Base v5014", size=(300, 30))
        self.openerphost_source = wx.TextCtrl(self, -1, "127.0.0.1", size=(150, 30))
        self.label_openerphost_cible = wx.StaticText(self, -1, "Serveur DB Base v7", size=(300, 30))
        self.openerphost_cible = wx.TextCtrl(self, -1, "127.0.0.1", size=(150, 30))
    
        self.label_openerpuser_source = wx.StaticText(self, -1, "User OpenErp Base v5014", size=(300, 30))
        self.openerpuser_source = wx.TextCtrl(self, -1, "terp", size=(150, 30))
        self.label_openerpuser_cible = wx.StaticText(self, -1, "User OpenErp Base v7", size=(300, 30))
        self.openerpuser_cible = wx.TextCtrl(self, -1, "terp", size=(150, 30))

        self.label_openerppassword_source = wx.StaticText(self, -1, "Password OpenErp Base v5014", size=(300, 30))
        self.openerppassword_source = wx.TextCtrl(self, -1, "admin", size=(150, 30))
        self.label_openerppassword_cible = wx.StaticText(self, -1, "Password OpenErp Base v7", size=(300, 30))
        self.openerppassword_cible = wx.TextCtrl(self, -1, "admin", size=(150, 30))
    
        self.label_openerpport_source = wx.StaticText(self, -1, "OpenErp port Base v5014", size=(300, 30))
        self.openerpport_source = wx.TextCtrl(self, -1, "8069", size=(150, 30))
        self.label_openerpport_cible = wx.StaticText(self, -1, "OpenErp port Base v7", size=(300, 30))
        self.openerpport_cible = wx.TextCtrl(self, -1, "8090", size=(150, 30))
    
        self.label_openerpprotocole_source = wx.StaticText(self, -1, "OpenErp Protocole Base v5014", size=(300, 30))
        self.openerpprotocole_source = wx.TextCtrl(self, -1, "http", size=(150, 30))
        self.label_openerpprotocole_cible = wx.StaticText(self, -1, "OpenErp Protocole Base v7", size=(300, 30))
        self.openerpprotocole_cible = wx.TextCtrl(self, -1, "http", size=(150, 30))
    
        self.label_admin_passwd = wx.StaticText(self, -1, "Password admin OpenErp ", size=(300, 30))
        self.admin_passwd = wx.TextCtrl(self, -1, "admin", size=(150, 30))

        self.label_module_list = wx.StaticText(self, -1, "Modules", size=(300, 30))
        self.module_list = wx.ComboBox(self, -1,value='all', pos=(50, 170), size=(150, -1), choices= ['base','partner', 'product','compta','all'], style=wx.CB_READONLY)
        self.win = wx.Window(self, -1 , size=(800, -1))
        self.win.SetBackgroundColour("white")
        self.button_migre = wx.Button(self, -1, "Migration", style=wx.BU_EXACTFIT, size=(150, 30))
        self.button_cancel = wx.Button(self, -1, "Cancel", style=wx.BU_EXACTFIT, size=(150, 30))
        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT, self.change_v5, self.db_source)
        self.Bind(wx.EVT_BUTTON, self.Migration, self.button_migre)
        self.Bind(wx.EVT_BUTTON, self.exit, self.button_cancel)
        # end wxGlade

    def exit(self, e):
        self.Destroy()

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Migration")
        self.SetSize((1000, 480))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(10, 4, 0, 0)
        print grid_sizer_1.SetHGap(10)
        print grid_sizer_1.GetHGap()
        
        grid_sizer_1.Add(self.label_db_source, 1, 0, 0)
        grid_sizer_1.Add(self.db_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_db_cible, 0, 0, 0)
        grid_sizer_1.Add(self.db_cible, 0, 0, 0)
        
        grid_sizer_1.Add(self.label_dbhost_source, 0, 0, 0)
        grid_sizer_1.Add(self.dbhost_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_dbhost_cible, 0, 0, 0)
        grid_sizer_1.Add(self.dbhost_cible, 0, 0, 0)

        grid_sizer_1.Add(self.label_dbport_source, 0, 0, 0)
        grid_sizer_1.Add(self.dbport_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_dbport_cible, 0, 0, 0)
        grid_sizer_1.Add(self.dbport_cible, 0, 0, 0)

        grid_sizer_1.Add(self.label_dbuser_source, 0, 0, 0)
        grid_sizer_1.Add(self.dbuser_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_dbuser_cible, 0, 0, 0)
        grid_sizer_1.Add(self.dbuser_cible, 0, 0, 0)
        
        grid_sizer_1.Add(self.label_dbpassword_source, 0, 0, 0)
        grid_sizer_1.Add(self.dbpassword_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_dbpassword_cible, 0, 0, 0)
        grid_sizer_1.Add(self.dbpassword_cible, 0, 0, 0)
        
        grid_sizer_1.Add(self.label_openerphost_source, 0, 0, 0)
        grid_sizer_1.Add(self.openerphost_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_openerphost_cible, 0, 0, 0)
        grid_sizer_1.Add(self.openerphost_cible, 0, 0, 0)
    
        grid_sizer_1.Add(self.label_openerpuser_source, 0, 0, 0)
        grid_sizer_1.Add(self.openerpuser_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_openerpuser_cible, 0, 0, 0)
        grid_sizer_1.Add(self.openerpuser_cible, 0, 0, 0)
        
        grid_sizer_1.Add(self.label_openerppassword_source, 0, 0, 0)
        grid_sizer_1.Add(self.openerppassword_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_openerppassword_cible, 0, 0, 0)
        grid_sizer_1.Add(self.openerppassword_cible, 0, 0, 0)
    
        grid_sizer_1.Add(self.label_openerpport_source, 1, 0, 0)
        grid_sizer_1.Add(self.openerpport_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_openerpport_cible, 0, 0, 0)
        grid_sizer_1.Add(self.openerpport_cible, 0, 0, 0)

        grid_sizer_1.Add(self.label_openerpprotocole_source, 1, 0, 0)
        grid_sizer_1.Add(self.openerpprotocole_source, 0, 0, 0)
        grid_sizer_1.Add(self.label_openerpprotocole_cible, 0, 0, 0)
        grid_sizer_1.Add(self.openerpprotocole_cible, 0, 0, 0)

        grid_sizer_1.Add(self.label_admin_passwd, 1, 0, 0)
        grid_sizer_1.Add(self.admin_passwd, 0, 0, 0)

        grid_sizer_1.Add( self.label_module_list, 0, 0, 0)
        grid_sizer_1.Add( self.module_list, 0, 0, 0)

        inputOneSizer = wx.BoxSizer()
        inputOneSizer.Add((200,20), proportion=1)

        grid_sizer_1.Add(inputOneSizer, 0, wx.ALIGN_RIGHT)
        grid_sizer_1.Add(inputOneSizer, 0, wx.ALIGN_RIGHT)
        grid_sizer_1.Add(inputOneSizer, 0, wx.ALIGN_RIGHT)
        grid_sizer_1.Add(inputOneSizer, 0, wx.ALIGN_RIGHT)

        grid_sizer_1.Add(inputOneSizer, 0, wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.button_migre, 0,   wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(inputOneSizer, 0, wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.button_cancel, 0,  wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)


        grid_sizer_1.Add(self.win, 0, 0, 0)

        sizer_1.Add(grid_sizer_1, 1, wx.ALL  , 0)
        self.SetSizer(sizer_1)

        self.Layout()
        # end wxGlade

    def change_v5(self, event):  # wxGlade: MyFrame.<event_handler>
        self.db_cible.Value =  self.db_source.Value+ "_v70"
        event.Skip()

    def Migration(self, event):  # wxGlade: MyFrame.<event_handler>



        OPTIONS = Options()
        OPTIONS.dbc = self.db_cible.Value
        OPTIONS.dbs = self.db_source.Value
        OPTIONS.createdb = True
        OPTIONS.dbportc = self.dbport_cible.Value
        OPTIONS.dbports = self.dbport_source.Value

        OPTIONS.hostc = self.openerphost_cible.Value
        OPTIONS.hosts = self.openerphost_source.Value

        OPTIONS.passdbc = self.dbpassword_cible.Value
        OPTIONS.passdbs = self.dbpassword_source.Value

        OPTIONS.userdbc = self.dbuser_cible.Value
        OPTIONS.userdbs = self.dbuser_source.Value

        OPTIONS.module = self.module_list.Value
        OPTIONS.passwdadmin = self.admin_passwd.Value

        OPTIONS.passwdc = self.openerppassword_cible.Value
        OPTIONS.passwds = self.openerppassword_source.Value

        OPTIONS.portc = self.openerpport_cible.Value
        OPTIONS.ports = self.openerpport_source.Value

        OPTIONS.protocolec = self.openerpprotocole_cible.Value
        OPTIONS.protocoles = self.openerpprotocole_source.Value

        OPTIONS.userc = self.openerpuser_cible.Value
        OPTIONS.users = self.openerpuser_source.Value

        migration.migration(OPTIONS)
        busyDlg = None
        self.Show()
        event.Skip()

# end of class MyFrame
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    cursor = wx.StockCursor(wx.CURSOR_ARROWWAIT)
    print cursor
    frame_1.SetCursor(cursor)
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
